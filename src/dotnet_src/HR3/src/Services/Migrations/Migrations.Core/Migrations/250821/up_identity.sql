

CREATE SCHEMA IF NOT EXISTS identity;


CREATE TABLE IF NOT EXISTS identity.users
(
    id bigint generated by default as identity
        constraint pk_users
            PRIMARY KEY,
    guid_id uuid not null,
    email varchar(100) not null UNIQUE,
    password_hash  varchar(200)  not null,
    password_salt  varchar(200)  not null,
    name varchar(250) not null,
    created_at timestamp with time zone default now(),
    updated_at timestamp with time zone default now(),
    is_email_confirmed boolean not null default false,
    email_confirmed_changed_at timestamp with time zone,
    email_confirmed_code varchar(50),
    email_confirmed_code_expires_at timestamp with time zone
);

create index if not exists idx_users_email on identity.users(email);
create index if not exists idx_users_email_confirmed_code
    on identity.users(email_confirmed_code)
    INCLUDE  (guid_id, is_email_confirmed, email_confirmed_code_expires_at);
create index if not exists idx_password_hash on identity.users(password_hash);
create index if not exists idx_password_salt on identity.users(password_salt);


CREATE TABLE IF NOT EXISTS identity.roles
(
    id    bigint generated by default as identity
        constraint pk_roles
            primary key,
    title text not null UNIQUE ,
    alias text not null UNIQUE
);

CREATE TABLE IF NOT EXISTS identity.users_roles
(
    user_id bigint not null
        constraint fk_users_roles_user_id
            references identity.users
            on delete restrict,
    role_id bigint not null
        constraint fk_users_roles_role_id
            references identity.roles
            on delete restrict ,
    constraint pk_users_roles
        primary key (user_id, role_id)
);


CREATE TABLE IF NOT EXISTS identity.sessions
(
    id bigint generated by default as identity
        constraint pk_sessions
            PRIMARY KEY,
    user_id bigint not null
        constraint fk_sessions_user_id
            references identity.users
            on delete restrict,
    guid_id uuid not null,
    created_at timestamp with time zone default now(),
    ip inet not null
);

create index if not exists idx_sessions_guid_id on identity.sessions(guid_id);

-- COURSES start





-- COURSES end

-- mentors

-- students

